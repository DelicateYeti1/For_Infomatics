git init // инициализация git репозитория в рабочей директории
git add <filename> // индексация файлов рабочей директории
git status // статус файлов в рабочей директории
git commit // коммит(сохранение текущей версии раб.директории)
gitk --all // графический просмотрщик истории

git clone <URL> // клонировать удаленный репозиторий

git log //  история коммитов
git log --stat // статистика 
git log --pretty=oneline // краткий вывод(хэш-сумма + комментарий)
git log --pretty=<short/full/fuller> // опции для pretty
git log --since=2.years // вывод истории за 2 года
git log --since='2008.10.15' // история коммитов с 15 ноября 2008
git log --until='2010.10.12 // обратный аналог --since
git log --author=Konstantin // фильтр по авторам
git log --grep=first // фильтр по ключевым словам в описании к коммитам
git log --author=Konstantin --grep=commit --all-match // all match для создания двойных / n-х фильтров
git log>log.txt // вывод истории в текстовый файл log.txt

git commit --amend -m 'comment' // --amend дополняет предыдущий коммит актуальной версией проиндексированных файлов (чтобы не "плодить" коммиты лишный раз)
git rm <filename> // удалить файл из рабочей директории, удаление проиндексировано\

git reset HEAD <filename> // сменить статус файла с 'проиндексирован(staged) на 'изменён (modified)'
git remote add <name> <URL> // связать локальный и удаленный репозитории
git remote -v // отобразить адрес удаленного репозитория
git pull <name> <branch> // извлекает и затем сливает данные из удалённой ветки репозитория в вашу текущую ветку
git push <name> <branch> // загружает текущую ветку на ветку привязанного удаленного репозитория
git checkout <hash or branch> // переключение между ветками и коммитами по хэш сумме
git branch // отобразить список существующих веток
git branch <name> // создать новую ветку
git merge <name of branch> // объединить ветки коммитов
git branch -d <name of branch> // удалить ветку
git tag <name of tag> // поставить метку на активный коммит